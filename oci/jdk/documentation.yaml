version: 1

application: jdk
is_chiselled: true
description: |
  This image packs the Java Development Kit, coming
  from the [OpenJDK project](https://www.openjdk.org/), a free and open
  source implementation of the Java Platform, Standard Edition (Java SE).
  OpenJDK is the official reference implementation of Java SE since
  version 7. [Read more](https://openjdk.org/).
  Java is a registered trademark of Oracle and/or its affiliates.

  ## About Chiselled Ubuntu

  This image does not include bash nor a package manager nor the OpenJDK.
  Its purpose is to serve as a runtime, final-stage base image for
  compatible Java applications.

  Read more about chiselled Ubuntu for OpenJRE, a new class of OCI images,
  on [the Ubuntu blog](https://ubuntu.com/blog/combining-distroless-and-ubuntu-chiselled-containers).
  And remember, the best base image is FROM scratch: so you could also
  [easily craft your own chiselled Ubuntu base](https://ubuntu.com/blog/craft-custom-chiselled-ubuntu-distroless)
  for your app specific needs.

  The images have `pebble enter` as the entrypoint. You can
  access the `java` with the following command:

  ```bash
  $ docker run --rm ubuntu/jdk:21-24.04_edge exec java
  Usage: java [options] <mainclass> [args...]
  ...
  ```

  ## Usage

  Launch this image locally:

  ```bash
  docker run -d --name jre-container -e TZ=UTC ubuntu/jdk:21-24.04_edge exec java
  ```

  The container logs will simply show the OpenJRE help message.
  This is because the container expects a compiled Java application to be given.

  Let's use the following Hello World application as an example:

  ```java
  // HelloWorld.java

  class HelloWorld
  {
      public static void main(String args[])
      {
          System.out.println("Hello, World");
      }
  }
  ```

  You can run the above Hello World application using
  the following example Dockerfile.

  ```docker
  FROM ubuntu/jdk:21-24.04_edge

  WORKDIR /
  COPY HelloWorld.java /

  CMD [ "exec", "java", "/HelloWorld.java" ]
  ```

debug:
  text: |
    ### Debugging

    To debug the container:

    ```bash
    docker exec openjdk-jdk-container pebble logs
    ```
