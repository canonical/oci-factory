version: 1

application: Mock Ubuntu Docker image
description: |
  This is a long description for a mock ROCK that is only used for **testing**
  and **demonstration** purposes.

docker:
  parameters:
    - --rm
    - --restart no
  access: | 
    The container will exit after printing the message, so there's nothing
    to do once it has finished its execution. If there are problems executing
    this container, check the Debug section below.

parameters:
  - type: --restart
    value: no
    description: Make sure the container is not restarted after execution.
  - type: CMD
    value: --greeting="Print this message instead"
    description: |
      Change the default Hello World message by a custom greeting.

debug:
  text: |
    If the container starts but nothing is being printed to stdout, then the
    first thing to check is whether the `hello` package is actually installed
    inside the image:

    ```bash
    docker run --rm -it --entrypoint bash mock-docker-image
    ```

    This will take you inside the container, where you can then test the
    `hello` package:

    ```bash
    hello
    ```

    If you get a `command not found`, then `hello` is either not installed or
    not in `PATH`. In either case, there might be an issue with the image
    build, so we recommend submitting a bug report.

microk8s:
  configmap:
    name: mocker-docker-image-config
    files:
      - key: mock-config
        name: mock-config-file
        # dummy example
        link: https://git.launchpad.net/~canonical-server/ubuntu-docker-images/+git/apache2/plain/examples/config/apache2.conf?h=2.4-22.04

  deploy:
    # dummy example
    link: https://git.launchpad.net/~canonical-server/ubuntu-docker-images/+git/apache2/plain/examples/apache2-deployment.yml?h=2.4-22.04
    access: You should now be able to see the "Hello World" output by looking up the container logs.