name: Releases
on:
  push:
    branches:
      - main
    paths:
      - "oci/*/releases.y*ml"


jobs:
  prepare-releases-matrix:
    runs-on: ubuntu-22.04
    name: Prepare new releases
    outputs:
      multi-image-release-matrix: ${{ steps.prepare-releases.outputs.multi-image-release-matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Infer images to releaase
        uses: tj-actions/changed-files@v35
        id: changed-files
        with:
          dir_names: "true"
          separator: ","
          files: |
            oci/*/releases.y*ml

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Prepare releases matrix
        id: prepare-releases
        if: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          ./src/releases/prepare_multi_image_release_matrix.py \
            --oci-paths ${{ steps.changed-files.outputs.all_changed_files }}


  do-releases:
    runs-on: ubuntu-22.04
    name: Release
    needs: [prepare-releases-matrix]
    if: ${{ needs.prepare-releases-matrix.outputs.multi-image-release-matrix }}
    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(needs.prepare-releases-matrix.outputs.multi-image-release-matrix) }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - env:
          ROCKS_DEV_LP_SSH_PRIVATE: ${{ secrets.ROCKS_DEV_LP_SSH_PRIVATE }}
          ROCKS_DEV_LP_USERNAME: ${{ secrets.ROCKS_DEV_LP_USERNAME }}
          CPC_BUILD_TOOLS_REPO: git.launchpad.net/~cloudware/cloudware/+git/cpc_build_tools
          # CPC_BUILD_TOOLS_REPO_REF: 9b716ed8a8ba728d036b54b1bb17a8f49dbda434
          SKOPEO_BRANCH: 'v1.9.1'
          SKOPEO_URL: 'https://github.com/containers/skopeo'
        run: | 
          ./src/releases/requirements.sh
          pip install -r src/releases/requirements.txt

      - name: Get all revisions per track
        id: get-all-canonical-tags
        env:
          OS_USERNAME: ${{ secrets.SWIFT_OS_USERNAME }}
          OS_TENANT_NAME: ${{ secrets.SWIFT_OS_TENANT_NAME }}
          OS_PASSWORD: ${{ secrets.SWIFT_OS_PASSWORD }}
          OS_REGION_NAME: ${{ secrets.SWIFT_OS_REGION_NAME }}
          OS_STORAGE_URL: ${{ secrets.SWIFT_OS_STORAGE_URL }}
          TRIGGER_PATH: ${{ matrix.trigger-name }}
          SWIFT_CONTAINER_NAME: ${{ vars.SWIFT_CONTAINER_NAME }}
        run: ./src/releases/get_all_canonical_tags.sh

      - name: Do releases from ${{ matrix.trigger-name }}
        env:
          DOCKER_HUB_CREDS_PSW: ${{ matrix.is-production && secrets.DOCKER_HUB_CREDS_PSW || secrets.DOCKER_HUB_CREDS_PSW_DEV }}
          DOCKER_HUB_CREDS_USR: ${{ matrix.is-production && secrets.DOCKER_HUB_CREDS_USR || secrets.DOCKER_HUB_CREDS_USR_DEV }}
          ACR_CREDS_USR: ${{ matrix.is-production && secrets.ACR_CREDS_USR || secrets.ACR_CREDS_USR_DEV }}
          ACR_CREDS_PSW: ${{ matrix.is-production && secrets.ACR_CREDS_PSW || secrets.ACR_CREDS_PSW_DEV }}
          ECR_CREDS_USR: ${{ matrix.is-production && secrets.ECR_CREDS_USR || secrets.ECR_CREDS_USR_DEV }}
          ECR_CREDS_PSW: ${{ matrix.is-production && secrets.ECR_CREDS_PSW || secrets.ECR_CREDS_PSW_DEV }}
          # ECR_LTS_CREDS_USR: ${{ matrix.is-production && secrets.ECR_LTS_CREDS_USR || secrets.ECR_LTS_CREDS_USR_DEV }}
          # ECR_LTS_CREDS_PSW: ${{ matrix.is-production && secrets.ECR_LTS_CREDS_PSW || secrets.ECR_LTS_CREDS_PSW_DEV }}
          
          ACR_NAMESPACE: ${{ matrix.is-production && 'ubuntu.azurecr.io' || secrets.ACR_NAMESPACE_DEV }}
          DOCKER_HUB_NAMESPACE: ${{ matrix.is-production && 'docker.io/ubuntu' || secrets.DOCKER_HUB_NAMESPACE_DEV }}
          ECR_NAMESPACE: ${{ matrix.is-production && 'ubuntu' || secrets.ECR_NAMESPACE_DEV }}
          # ECR_LTS_NAMESPACE: ${{ matrix.is-production && 'lts' || secrets.ECR_LTS_NAMESPACE_DEV }}
        run: |
          set -ex
          echo "Running in production?  ${{ matrix.is-production && 'YES' || 'NO' }}"
          
          ./src/releases/release.py \
            --releases-trigger ${{ matrix.trigger-name }} \
            --image-name ${{ matrix.name }} \
            --all-released-tags ${{ matrix.all-tags-file }} \
            --all-revision-tags "${{ steps.get-all-canonical-tags.outputs.canonical-tags }}" \
            --ghcr-repo "${{ github.repository_owner }}/oci-factory"

      - name: Commit ${{ matrix.all-tags-file }} file
        uses: actions-x/commit@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: 'main'
          message: 'ci: automatically update ${{ matrix.all-tags-file }}, from ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          files: ${{ matrix.all-tags-file }}
          email: rocks-dev@lists.canonical.com