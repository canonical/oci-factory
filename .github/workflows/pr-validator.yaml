name: pr-validator
on:
  pull_request:
    paths:
      - 'oci/*/*.y*ml'

jobs:
  get-submitted-files:
    runs-on: ubuntu-22.04
    name: Get submitted files
    outputs:
      changed-files: ${{ steps.changed-files.outputs.all_changed_files }}
      image-name: ${{ steps.changed-files-dir-names.outputs.all_changed_files }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          json: true

      - name: Get image name
        id: changed-files-dir-names
        uses: tj-actions/changed-files@v35
        with:
          dir_names: "true"

      - name: Only 1 image can be changed per PR
        run: |
          set -eux
          dir_names="${{ steps.changed-files-dir-names.outputs.all_changed_files }}"
          echo "Can only modify 1 image per PR"
          (( $(echo "${dir_names}" | wc -w) == 1 ))

  check-missing-files:
    runs-on: ubuntu-22.04
    name: Check for missing files
    needs: [get-submitted-files]
    steps:
      - uses: actions/checkout@v3

      - name: Check if documentation.yaml exists
        uses: andstor/file-existence-action@v2
        with:
          files: "${{ needs.get-submitted-files.outputs.image-name }}/documentation.yaml"
          fail: true

      - name: Check if contacts.yaml exists
        uses: andstor/file-existence-action@v2
        with:
          files: "${{ needs.get-submitted-files.outputs.image-name }}/contacts.yaml"
          fail: true

  validate-submitted-files:
    runs-on: ubuntu-22.04
    name: Validate submitted files
    needs: [get-submitted-files, check-missing-files]
    outputs:
      build: ${{ steps.schedule-builds.outputs.image-name }}
    strategy:
      fail-fast: true
      matrix:
        filename: ${{ needs.get-submitted-files.outputs.changed-files }}
    steps:
      - uses: actions/checkout@v3

      - name: Validate YAML format
        run: |
          set -eux
          pip install yamllint
          yamllint -c .yamllint.yaml ${{ matrix.filename }}

      - name: Schedule test builds
        if: contains(matrix.filename, "builds.yaml")
        id: schedule-builds
        run: echo "image-name=${{ needs.get-submitted-files.outputs.image-name }}" >> $GITHUB_STATE

