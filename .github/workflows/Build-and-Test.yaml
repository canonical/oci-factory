name: Build and Test
on:
  workflow_dispatch:
    inputs:
      oci-image-names:
        description: 'Comma-separated names of the OCI images to build and test'
        required: true
  push:
    paths:
      - "oci/*/builds.y*ml"
  pull_request:
    paths:
      - "oci/*/builds.y*ml"

jobs:
  prepare-build-matrix:
    runs-on: ubuntu-22.04
    name: Prepare new builds
    outputs:
      build-matrix: ${{ steps.prepare-builds.outputs.build-matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Infer images to build
        if: github.event_name != 'workflow_dispatch'
        uses: tj-actions/changed-files@v35
        with:
          json: true
          dir_names: "true"
          write_output_files: true
          files: |
            oci/*/builds.y*ml

      - name: Validate images from dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          for img in $(echo ${{ inputs.oci-image-names }} | tr ',' ' ')
          do
            test -d "oci/${img}"
          done

          changed_files="$(echo '["'${{ inputs.oci-image-names }}'"]' \
              | jq -c '.[0] | split(",") | map("oci/" + .)')"
          
          mkdir -p .github/outputs
          echo "${changed_files}" > .github/outputs/all_changed_files.json

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - run: pip install -r src/builds/requirements.txt

      - name: Validate and prepare builds matrix
        id: prepare-builds
        run: |
          ./src/builds/prepare_multi_image_build_matrix.py \
            --oci-dirs-file ".github/outputs/all_changed_files.json"

  run-builds:
    runs-on: ubuntu-22.04
    needs: [prepare-build-matrix]
    name: Build
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.prepare-build-matrix.outputs.build-matrix) }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ matrix.source }}
          fetch-depth: 0
      
      - run: git checkout ${{ matrix.commit }}

      - name: Validate proper image naming
        if: matrix.dockerfile-build == ''
        working-directory: ${{ matrix.directory }}
        env:
          YQ_VERSION: 'v4.32.2'
          YQ_BINARY: yq_linux_amd64
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${{ env.YQ_VERSION }}/${{ env.YQ_BINARY }}
          sudo mv ${{ env.YQ_BINARY }} /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          
          rock_name=`cat rockcraft.y*ml | yq -r .name`
          if [[ "${{ matrix.path }}" != *"${rock_name}"* ]]
          then
            echo "ERROR: the ROCK's name must match the OCI folder name!"
            exit 1
          fi

      - name: Build ROCK ${{ matrix.name }}
        if: matrix.dockerfile-build == ''
        id: rockcraft
        uses: canonical/craft-actions/rockcraft-pack@main
        with:
          path: "${{ matrix.directory }}"
          verbosity: debug

      - uses: actions/upload-artifact@v3
        if: matrix.dockerfile-build == ''
        with:
          name: ${{ matrix.name }}_${{ matrix.commit }}.tar
          path: ${{ steps.rockcraft.outputs.rock }}

      - name: Set up QEMU
        if: matrix.dockerfile-build != ''
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: matrix.dockerfile-build != ''
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Form the platforms string
        if: matrix.dockerfile-build != ''
        id: buildx-platforms
        run: |
          sudo apt install -y jq
          platforms=$(echo linux/$(echo '${{ toJSON(matrix.dockerfile-build.platforms) }}' | jq -r 'join(",linux/")'))
          echo "platforms=${platforms}" >> "$GITHUB_OUTPUT"
        
      - name: Build OCI image ${{ matrix.name }}
        if: matrix.dockerfile-build != ''
        uses: docker/build-push-action@v4
        with:
          context: '${{ matrix.directory }}'
          outputs: 'type=oci,dest=${{ matrix.name }}_${{ matrix.commit }}.tar'
          platforms: ${{ steps.buildx-platforms.outputs.platforms }}
          push: false

      - uses: actions/upload-artifact@v3
        if: matrix.dockerfile-build != ''
        with:
          name: ${{ matrix.name }}_${{ matrix.commit }}.tar
          path: ${{ matrix.name }}_${{ matrix.commit }}.tar

      - uses: actions/checkout@v3

      - name: Run tests for ${{ matrix.name }} on ${{ matrix.commit }}
        uses: ./.github/workflows/tests
        with:
          artifact-name: ${{ matrix.name }}_${{ matrix.commit }}.tar