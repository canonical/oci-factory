name: Tests
on:
  workflow_dispatch:
    inputs:
      oci-image-name:
        description: 'Name of the image to be fetched and tested'
        required: true
      test-from:
        description: 'From where to fetch the OCI image to be tested'
        required: true
        default: 'cache'
        type: choice
        options:
        - cache
        - registry

env:
  TEST_IMAGE_NAME: 'test-img'
  TEST_IMAGE_TAG: 'test'
  SKOPEO_IMAGE: 'quay.io/skopeo/stable:v1.9'

jobs:
  fetch-oci-image:
    runs-on: ubuntu-22.04
    name: Fetch OCI image for testing
    steps:
      - uses: actions/cache/restore@v3
        if: ${{ inputs.test-from == 'cache' }}
        with:
          path: ${{ inputs.oci-image-name }}
          key: ${{ github.run_id }}-${{ inputs.oci-image-name }}

      - if: ${{ inputs.test-from == 'cache' }}
        run: |
          docker run --rm -v $PWD:/workdir \
            -w /workdir \
            ${{ env.SKOPEO_IMAGE }} \
            copy oci-archive://${{ inputs.oci-image-name }} \
            oci:${{ env.TEST_IMAGE_NAME}}:${{ env.TEST_IMAGE_TAG }}
      
      - if: ${{ inputs.test-from == 'registry' }}
        run: |
          docker run --rm -v $PWD:/out \
            ${{ env.SKOPEO_IMAGE }} \
            copy docker://${{ inputs.oci-image-name }} \
            oci:/out/${{ env.TEST_IMAGE_NAME}}:${{ env.TEST_IMAGE_TAG }}

      - uses: actions/cache/save@v3
        with:
          path: ${{ env.TEST_IMAGE_NAME}}
          key: ${{ github.run_id }}-${{ inputs.oci-image-name }}-test

          
  # test-oci-compliance:
  #   runs-on: ubuntu-22.04
  #   name: Test OCI compliance
  #   needs: [fetch-oci-image]
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: ${{ inputs.artifact-name }}

  #     - name: Extract and tag image for testing
  #       run: |
  #         sudo apt install -y skopeo
  #         skopeo copy oci-archive:${{ inputs.artifact-name }} \
  #           oci:${{ env.TEST_IMAGE_NAME}}:${{ env.TEST_IMAGE_TAG }}

  #     - name: Install Umoci
  #       env:
  #         UMOCI_VERSION: 'v0.4.7'
  #         UMOCI_BINARY: 'umoci.amd64'
  #       run: |
  #         wget https://github.com/opencontainers/umoci/releases/download/${UMOCI_VERSION}/${UMOCI_BINARY}
  #         sudo mv ${UMOCI_BINARY} /usr/bin/umoci
  #         sudo chmod +x /usr/bin/umoci

  #     - name: Run Umoci tests
  #       run: |
  #         sudo umoci unpack --keep-dirlinks \
  #           --image ${{ env.TEST_IMAGE_NAME}}:${{ env.TEST_IMAGE_TAG }} \
  #           bundle

  #         umoci list --layout ${{ env.TEST_IMAGE_NAME}} | grep -w -c ${{ env.TEST_IMAGE_TAG }}

      