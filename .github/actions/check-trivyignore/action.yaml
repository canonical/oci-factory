name: Check Trivyignore
description: 'Check if the trivyignore file is up to date'
# This action assumes that trivy is already set up in the previous steps

inputs:
  image-ref:
    description: 'The image to be scanned'
    required: true
  trivyignores:
    description: 'The path to the trivyignore file'
    required: true
  severity:
    description: 'The severity level to be scanned'
    default: 'HIGH,CRITICAL'
  skip-files:
    description: 'The files to be skipped'
    default: '/bin/pebble,/usr/bin/pebble'

runs:
  using: "composite" 
  steps:
    - name: "Check unnecessary trivyignore entries"
      shell: bash
      run: |
        if [ -f "${{ inputs.trivyignores }}"" ]
          then
            output=$(trivy image ${{ inputs.image-ref }} --severity ${{ inputs.severity }} -q -f json --ignorefile "" --skip-files ${{ inputs.skip-files }} \
                      | jq -r '.Results[].Vulnerabilities[].VulnerabilityID' 2>/dev/null || echo "No vulnerabilities found")
            line=0
            while read CVE;
            do
              line=$(( line + 1 ))
              if [[ "$output" != *"$CVE"* ]] && [[ ! "$CVE" =~ ^#.* ]]
              then
              echo "::notice file=.trivyignore,line=${line}::$CVE not present anymore, can be safely removed."
              fi
            done < .trivyignore
          fi
